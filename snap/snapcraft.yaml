name: telegram-desktop
adopt-info: telegram

base: core24
grade: stable
confinement: strict
compression: lzo

apps:
  telegram-desktop:
    command: usr/bin/telegram-desktop
    common-id: org.telegram.desktop
    desktop: usr/share/applications/org.telegram.desktop.desktop
    autostart: telegram-desktop_telegram-desktop.desktop
    extensions: [gnome]
    plugs:
      - audio-playback
      - audio-record
      - camera
      - hardware-observe
      - home
      - network
      - network-bind
      - network-status
      - removable-media
      - unity7
    slots:
      - mpris

parts:
  telegram:
    plugin: cmake
    source: .
    source-type: git
    parse-info: [usr/share/metainfo/org.telegram.desktop.metainfo.xml]
    build-environment:
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -Wl,-push-state,-no-as-needed,-lhwy,-pop-state -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DTDESKTOP_API_ID=611335
      - -DTDESKTOP_API_HASH=d524b414d21f4d37f08684c1df41ac9c
    override-pull: |
      craftctl default

      version_file=Telegram/build/version
      version=$(sed -n "s/AppVersionStr[ ]\+\(.*\)\+/\1/p" $version_file)
      beta=$(sed -n "s/BetaChannel[ ]\+\(.*\)\+/\1/p" $version_file)

      if [ "$beta" != "0" ]; then
        version="$version-beta"
      fi

      version="${version}$(git describe --tags | sed 's,^v[^-]\+,,')"

      craftctl set version="$version"
    override-build: |
      craftctl default
      mv "$CRAFT_PART_INSTALL"/usr/bin/{Telegram,telegram-desktop}

      APP_ID=org.telegram.desktop
      sed -i "s/^Icon=$APP_ID$/Icon=snap.telegram-desktop./g" "$CRAFT_PART_INSTALL/usr/share/applications/$APP_ID.desktop"
      for i in $(find "$CRAFT_PART_INSTALL/usr/share/icons" -name "$APP_ID*.svg" -o -name "$APP_ID*.png"); do
        PREFIXED="$(dirname "$i")/snap.$CRAFT_PROJECT_NAME.$(basename "$i" | sed "s/$APP_ID//")"
        mv "$i" "$PREFIXED"
        DEST="$(dirname "$i" | sed 's@usr/share@meta/gui@')"
        mkdir -p "$DEST"
        cp -r "$PREFIXED" "$DEST"
      done
    after:
      - ada
      - ffmpeg
      - geoclue
      - libjxl
      - protobuf
      - qt
      - rnnoise
      - tde2e
      - webrtc

  pkgs:
    plugin: nil
    build-packages:
      - clang
      - gperf
      - libavif-dev
      - libboost-regex-dev
      - libheif-dev
      - libhwy-dev
      - libopenal-dev
      - libopenh264-dev
      - libopus-dev
      - libpipewire-0.3-dev
      - libssl-dev
      - libvpx-dev
      - libxcb-cursor-dev
      - libxcb-glx0-dev
      - libxcb-icccm4-dev
      - libxcb-image0-dev
      - libxcb-keysyms1-dev
      - libxcb-randr0-dev
      - libxcb-record0-dev
      - libxcb-render-util0-dev
      - libxcb-screensaver0-dev
      - libxcb-shape0-dev
      - libxcb-sync-dev
      - libxcb-util-dev
      - libxcb-xfixes0-dev
      - libxcb-xkb-dev
      - libxkbcommon-x11-dev
    stage-packages:
      - libavif16
      - libopenal1
      - libopenh264-7
      - libxcb-cursor0
      - libxcb-glx0
      - libxcb-randr0
      - libxcb-record0
      - libxcb-screensaver0
      - libxcb-sync1
      - libxcb-xfixes0

  patches:
    source: https://github.com/desktop-app/patches.git
    source-depth: 1
    source-commit: 1ffcb17817a2cab167061d530703842395291e69
    plugin: dump
    override-pull: |
      craftctl default
      cp -r . "$CRAFT_STAGE/patches"
    override-prime: |
      rm -rf patches
    stage: [-./*]

  ada:
    source: https://github.com/ada-url/ada.git
    source-depth: 1
    source-tag: v3.2.4
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DADA_TESTING=OFF
      - -DADA_TOOLS=OFF
      - -DADA_INCLUDE_URL_PATTERN=OFF
    prime: [-./*]

  ffmpeg:
    plugin: nil
    build-packages:
      - libavcodec-dev
      - libavfilter-dev
      - libavformat-dev
      - libavutil-dev
      - libswresample-dev
      - libswscale-dev
    stage-packages:
      - libavcodec60
      - libavfilter9
      - libavformat60
      - libavutil58
      - libswresample4
      - libswscale7
    override-build: |
      craftctl default
      mv "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas/"* "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR"
      rmdir "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas"
      mv "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack/"* "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR"
      rmdir "$CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack"

  geoclue:
    plugin: nil
    stage-packages:
      - libgeoclue-2-0
    stage:
      - ./usr/lib/x86_64-linux-gnu/libgeoclue-2.so*

  libjxl:
    source: https://github.com/libjxl/libjxl.git
    source-depth: 1
    source-tag: v0.11.1
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DBUILD_SHARED_LIBS=OFF
      - -DBUILD_TESTING=OFF
      - -DJPEGXL_ENABLE_DEVTOOLS=OFF
      - -DJPEGXL_ENABLE_TOOLS=OFF
      - -DJPEGXL_INSTALL_JPEGLI_LIBJPEG=ON
      - -DJPEGXL_ENABLE_DOXYGEN=OFF
      - -DJPEGXL_ENABLE_MANPAGES=OFF
      - -DJPEGXL_ENABLE_BENCHMARK=OFF
      - -DJPEGXL_ENABLE_EXAMPLES=OFF
      - -DJPEGXL_ENABLE_JNI=OFF
      - -DJPEGXL_ENABLE_SJPEG=OFF
      - -DJPEGXL_ENABLE_OPENEXR=OFF
      - -DJPEGXL_ENABLE_SKCMS=OFF
      - -DJPEGXL_FORCE_SYSTEM_BROTLI=ON
      - -DJPEGXL_FORCE_SYSTEM_LCMS2=ON
      - -DJPEGXL_FORCE_SYSTEM_HWY=ON
    override-build: |
      craftctl default
      cp lib/libjpegli-static.a "$CRAFT_PART_INSTALL"/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libjpeg.a
      ar rcs "$CRAFT_PART_INSTALL"/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libjpeg.a lib/CMakeFiles/jpegli-libjpeg-obj.dir/jpegli/libjpeg_wrapper.cc.o
    stage:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libjpeg.so*
    prime: [-./*]

  protobuf:
    source: https://github.com/protocolbuffers/protobuf.git
    source-depth: 1
    source-tag: v30.2
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -Dprotobuf_BUILD_TESTS=OFF
    prime: [-./*]
    after:
      - pkgs

  qt:
    source: https://github.com/qt/qt5.git
    source-depth: 1
    source-tag: v6.9.1
    source-submodules:
      - qtbase
      - qtdeclarative
      - qtimageformats
      - qtshadertools
      - qtsvg
      - qtwayland
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -Wl,-push-state,-no-as-needed,-lhwy,-pop-state -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DINSTALL_LIBDIR=/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      - -DBUILD_SHARED_LIBS=OFF
      - -DQT_QPA_PLATFORMS="wayland;xcb"
      - -DFEATURE_eglfs=OFF
      - -DINPUT_openssl=linked
    override-pull: |
      craftctl default
      QT="$(grep 'set(QT_REPO_MODULE_VERSION' qtbase/.cmake.conf | sed -r 's/.*"(.*)".*/\1/')"
      cd qtbase
      find $CRAFT_STAGE/patches/qtbase_${QT} -type f -print0 | sort -z | xargs -r0 git apply
      cd ../qtwayland
      find $CRAFT_STAGE/patches/qtwayland_${QT} -type f -print0 | sort -z | xargs -r0 git apply
      cd ..
    prime: [-./*]
    after:
      - libjxl
      - patches
      - pkgs

  rnnoise:
    source: https://gitlab.xiph.org/xiph/rnnoise.git
    source-depth: 1
    source-commit: 7f449bf8bd3b933891d12c30112268c4090e4d59
    plugin: autotools
    build-environment:
      - CFLAGS: -O2 -s
    autotools-configure-parameters:
      - --prefix=/usr
      - --libdir=\${exec_prefix}/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      - --disable-shared
      - --disable-examples
      - --disable-doc
    prime: [-./*]

  systemd:
    plugin: nil
    stage-packages:
      - systemd
    stage:
      - ./usr/bin/systemd-detect-virt

  tde2e:
    source: https://github.com/tdlib/td.git
    source-depth: 1
    source-commit: 51743dfd01dff6179e2d8f7095729caa4e2222e9
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_INSTALL_LIBDIR=lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      - -DTD_E2E_ONLY=ON
    prime: [-./*]
    after:
      - pkgs

  webrtc:
    source: https://github.com/desktop-app/tg_owt.git
    source-depth: 1
    source-commit: 62321fd7128ab2650b459d4195781af8185e46b5
    plugin: cmake
    build-environment:
      - LDFLAGS: ${LDFLAGS:+$LDFLAGS} -s
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
    prime: [-./*]
    after:
      - ffmpeg
      - libjxl
      - pkgs
